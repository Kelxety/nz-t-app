generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(uuid())
  name          String?       @db.VarChar(255)
  accountName   String        @map("account_name") @db.VarChar(50)
  firstName     String        @map("first_name") @db.VarChar(50)
  middleName    String?       @map("middle_name") @db.VarChar(50)
  lastName      String        @map("last_name") @db.VarChar(50)
  gender        Gender?
  status        String        @default("active")
  description   String?
  username      String        @unique
  image         String?
  password      String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  refresh_token RefreshToken?
  role          Role[]        @relation("system_user_role")

  @@map("system_user")
}

model HospitalOffice {
  id           String        @id @default(uuid())
  officeName   String?       @map("office_name") @db.VarChar(255)
  officeAcro   String?       @map("office_acro") @db.VarChar(50)
  state        String?       @db.VarChar(20)
  remarks      String?       @db.VarChar(255)
  createdBy    String?       @map("created_by") @db.VarChar(50)
  createdAt    DateTime      @default(now()) @map("created_at") @db.DateTime(0)
  updatedBy    String?       @map("updated_by") @db.VarChar(50)
  updatedAt    DateTime      @updatedAt @map("updated_at") @db.DateTime(0)
  scmIssuances ScmIssuance[]
  scmRises     ScmRis[]

  @@map("hospital_office")
}

model HospitalPatient {
  id             String          @id @default(uuid())
  fyCode         Int?            @map("fy_code")
  patientName    String?         @map("patient_name") @db.VarChar(255)
  firstName      String?         @map("first_name") @db.VarChar(100)
  middleName     String?         @map("middle_name") @db.VarChar(100)
  lastName       String?         @map("last_name") @db.VarChar(100)
  extName        String?         @map("ext_name") @db.VarChar(50)
  address        String?         @db.VarChar(255)
  civilStatus    String?         @map("civil_status") @db.VarChar(50)
  nationality    String?         @db.VarChar(50)
  contactNo      String?         @map("contact_no") @db.VarChar(50)
  gender         String?         @db.VarChar(50)
  birthdate      DateTime?       @db.Date
  state          String?         @db.VarChar(20)
  remarks        String?         @db.VarChar(255)
  createdBy      String?         @map("created_by") @db.VarChar(50)
  createdAt      DateTime        @default(now()) @map("created_at") @db.DateTime(0)
  updatedBy      String?         @map("updated_by") @db.VarChar(50)
  updatedAt      DateTime        @updatedAt @map("updated_at") @db.DateTime(0)
  scmChargeslips ScmChargeslip[]

  @@map("hospital_patient")
}

model HospitalPatientType {
  id              String         @id @default(uuid())
  patientTypename String?        @map("patient_typename") @db.VarChar(255)
  isPatientselect Boolean?       @map("is_patientselect")
  state           String?        @db.VarChar(20)
  createdBy       String?        @map("created_by") @db.VarChar(50)
  createdAt       DateTime       @default(now()) @map("created_at") @db.DateTime(0)
  updatedBy       String?        @map("updated_by") @db.VarChar(50)
  updatedAt       DateTime       @updatedAt @map("updated_at") @db.DateTime(0)
  scmChargeslips  ScmChargeslip?

  @@map("hospital_patient_type")
}

model HospitalPhysician {
  id             String          @id @default(uuid())
  physicianName  String          @map("physician_name") @db.VarChar(150)
  designation    String?         @db.VarChar(150)
  specialty      String?         @db.VarChar(255)
  prcNo          String?         @map("prc_no") @db.VarChar(50)
  prcValidity    DateTime?       @map("prc_validity") @db.Date
  state          String?         @db.VarChar(20)
  remarks        String?         @db.VarChar(255)
  createdBy      String?         @map("created_by") @db.VarChar(50)
  createdAt      DateTime        @default(now()) @map("created_at") @db.DateTime(0)
  updatedBy      String?         @map("updated_by") @db.VarChar(50)
  updatedAt      DateTime        @updatedAt @map("updated_at") @db.DateTime(0)
  scmChargeslips ScmChargeslip[]

  @@map("hospital_physician")
}

model HospitalProfile {
  id            String   @id @default(uuid())
  agencyName    String   @map("agency_name") @db.VarChar(255)
  agencyAcro    String?  @map("agency_acro") @db.VarChar(50)
  agencyAddress String?  @map("agency_address") @db.VarChar(255)
  rcenter       String?  @db.VarChar(50)
  agencyLogo    String?  @map("agency_logo") @db.VarChar(100)
  pgpLogo       String?  @map("pgp_logo") @db.VarChar(100)
  state         String?  @db.VarChar(25)
  createdBy     String?  @map("created_by") @db.VarChar(50)
  createdAt     DateTime @default(now()) @map("created_at") @db.DateTime(0)
  updatedBy     String?  @map("updated_by") @db.VarChar(50)
  updatedAt     DateTime @updatedAt @map("updated_at") @db.DateTime(0)

  @@map("hospital_profile")
}

model ScmAdjustment {
  id                String             @id @default(uuid())
  fyCode            Int                @map("fy_code")
  adjRefno          String             @map("adj_refno") @db.VarChar(30)
  adjDate           DateTime           @map("adj_date") @db.Date
  warehouseId       String             @map("warehouse_id") @db.VarChar(36)
  reason            String             @db.VarChar(255)
  state             String?            @db.VarChar(20)
  remarks           String?            @db.VarChar(255)
  isApproved        Boolean?           @map("is_approved")
  approvedBy        String?            @map("approved_by") @db.VarChar(50)
  approvedAt        DateTime?          @map("approved_at") @db.DateTime(0)
  isPosted          Boolean?           @map("is_posted")
  postedBy          String?            @map("posted_by") @db.VarChar(50)
  postedAt          DateTime?          @default(now()) @map("posted_at") @db.DateTime(0)
  createdBy         String?            @map("created_by") @db.VarChar(50)
  createdAt         DateTime           @default(now()) @map("created_at") @db.DateTime(0)
  updatedBy         String?            @map("updated_by") @db.VarChar(50)
  updatedAt         DateTime           @updatedAt @map("updated_at") @db.DateTime(0)
  scmWarehouse      ScmWarehouse       @relation(fields: [warehouseId], references: [id], onUpdate: Restrict, map: "scm_adjustment_ibfk_1")
  scmAdjustmentDtls ScmAdjustmentDtl[]

  @@index([warehouseId], map: "warehouse_id")
  @@map("scm_adjustment")
}

model ScmAdjustmentDtl {
  id            String         @id @default(uuid())
  adjustmentId  String?        @map("adjustment_id") @db.VarChar(36)
  itemdtlId     String?        @map("itemdtl_id") @db.VarChar(36)
  adjMode       String?        @map("adj_mode") @db.VarChar(30)
  qty           Int?
  cost          Float?
  price         Float?
  costAmount    Float?         @map("cost_amount")
  priceAmount   Float?         @map("price_amount")
  scmAdjustment ScmAdjustment? @relation(fields: [adjustmentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_adjustment_dtl_ibfk_1")
  scmItemDtl    ScmItemDtl?    @relation(fields: [itemdtlId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_adjustment_dtl_ibfk_2")

  @@index([adjustmentId], map: "adjustment_id")
  @@index([itemdtlId], map: "itemdtl_id")
  @@map("scm_adjustment_dtl")
}

model ScmBadOrder {
  id              String           @id @default(uuid())
  fyCode          Int              @map("fy_code")
  boRefno         String           @map("bo_refno") @db.VarChar(30)
  boDate          DateTime         @map("bo_date") @db.Date
  warehouseId     String           @map("warehouse_id") @db.VarChar(36)
  supplierId      String           @map("supplier_id") @db.VarChar(36)
  reason          String           @db.VarChar(255)
  state           String?          @db.VarChar(20)
  remarks         String?          @db.VarChar(255)
  isPosted        Boolean?         @map("is_posted")
  postedBy        String?          @map("posted_by") @db.VarChar(50)
  postedAt        DateTime?        @default(now()) @map("posted_at") @db.DateTime(0)
  createdBy       String?          @map("created_by") @db.VarChar(50)
  createdAt       DateTime         @default(now()) @map("created_at") @db.DateTime(0)
  updatedBy       String?          @map("updated_by") @db.VarChar(50)
  updatedAt       DateTime         @updatedAt @map("updated_at") @db.DateTime(0)
  scmWarehouse    ScmWarehouse     @relation(fields: [warehouseId], references: [id], onUpdate: Restrict, map: "scm_bad_order_ibfk_1")
  scmSupplier     ScmSupplier      @relation(fields: [supplierId], references: [id], onUpdate: Restrict, map: "scm_bad_order_ibfk_2")
  scmBadOrderDtls ScmBadOrderDtl[]

  @@index([supplierId], map: "supplier_id")
  @@index([warehouseId], map: "warehouse_id")
  @@map("scm_bad_order")
}

model ScmBadOrderDtl {
  id          String      @id @default(uuid())
  badorderId  String      @map("badorder_id") @db.VarChar(36)
  itemdtlId   String      @map("itemdtl_id") @db.VarChar(36)
  qty         Int
  cost        Float?
  price       Float?
  costAmount  Float?      @map("cost_amount")
  priceAmount Float?      @map("price_amount")
  scmBadOrder ScmBadOrder @relation(fields: [badorderId], references: [id], onUpdate: Restrict, map: "scm_bad_order_dtl_ibfk_1")
  scmItemDtl  ScmItemDtl  @relation(fields: [itemdtlId], references: [id], onUpdate: Restrict, map: "scm_bad_order_dtl_ibfk_2")

  @@index([badorderId], map: "badorder_id")
  @@index([itemdtlId], map: "itemdtl_id")
  @@map("scm_bad_order_dtl")
}

model ScmChargeslip {
  id                  String              @id @default(uuid())
  fyCode              Int?                @map("fy_code")
  csRefno             String              @map("cs_refno") @db.VarChar(50)
  csDate              DateTime            @map("cs_date") @db.Date
  csName              String              @map("cs_name") @db.VarChar(255)
  patienttypeId       String              @unique @map("patienttype_id") @db.VarChar(36)
  physicianId         String?             @map("physician_id") @db.VarChar(36)
  patientId           String              @map("patient_id") @db.VarChar(36)
  warehouseId         String              @map("warehouse_id") @db.VarChar(36)
  amount              Float?
  state               String?             @db.VarChar(20)
  remarks             String?             @db.VarChar(255)
  isPosted            Boolean?            @map("is_posted")
  postedBy            String?             @map("posted_by") @db.VarChar(50)
  postedAt            DateTime?           @default(now()) @map("posted_at") @db.DateTime(0)
  createdBy           String?             @map("created_by") @db.VarChar(50)
  createdAt           DateTime            @default(now()) @map("created_at") @db.DateTime(0)
  updatedBy           String?             @map("updated_by") @db.VarChar(50)
  updatedAt           DateTime            @updatedAt @map("updated_at") @db.DateTime(0)
  hospitalPatientType HospitalPatientType @relation(fields: [patienttypeId], references: [id], onUpdate: Restrict, map: "scm_chargeslip_ibfk_1")
  hospitalPhysician   HospitalPhysician?  @relation(fields: [physicianId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_chargeslip_ibfk_2")
  hospitalPatient     HospitalPatient     @relation(fields: [patientId], references: [id], onUpdate: Restrict, map: "scm_chargeslip_ibfk_3")
  scmWarehouse        ScmWarehouse        @relation(fields: [warehouseId], references: [id], onUpdate: Restrict, map: "scm_chargeslip_ibfk_4")
  scmChargeslipDtls   ScmChargeslipDtl[]
  scmReturns          ScmReturn[]

  @@index([patientId], map: "patient_id")
  @@index([patienttypeId], map: "patienttype_id")
  @@index([physicianId], map: "physician_id")
  @@index([warehouseId], map: "warehouse_id")
  @@map("scm_chargeslip")
}

model ScmChargeslipDtl {
  id            String         @id @default(uuid())
  chargeslipId  String?        @map("chargeslip_id") @db.VarChar(36)
  itemdtlId     String?        @map("itemdtl_id") @db.VarChar(36)
  price         Float?
  qty           Int?
  priceAmount   Float?         @map("price_amount")
  patienttypeId String
  scmChargeslip ScmChargeslip? @relation(fields: [chargeslipId], references: [patienttypeId], onDelete: Restrict, onUpdate: Restrict, map: "scm_chargeslip_dtl_ibfk_1")
  scmItemDtl    ScmItemDtl?    @relation(fields: [itemdtlId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_chargeslip_dtl_ibfk_2")

  @@index([chargeslipId], map: "chargeslip_id")
  @@index([itemdtlId], map: "itemdtl_id")
  @@map("scm_chargeslip_dtl")
}

model ScmIssuance {
  id              String           @id @default(uuid())
  fyCode          Int?             @map("fy_code")
  issRefno        String?          @map("iss_refno") @db.VarChar(15)
  issDate         DateTime?        @map("iss_date") @db.Date
  warehouseId     String?          @map("warehouse_id") @db.VarChar(36)
  officeId        String?          @map("office_id") @db.VarChar(36)
  risId           String?          @map("ris_id") @db.VarChar(36)
  state           String?          @db.VarChar(20)
  remarks         String?          @db.VarChar(255)
  isRis           Boolean?         @map("is_ris")
  isPosted        Boolean?         @map("is_posted")
  postedBy        String?          @map("posted_by") @db.VarChar(50)
  postedAt        DateTime?        @default(now()) @map("posted_at") @db.DateTime(0)
  createdBy       String?          @map("created_by") @db.VarChar(50)
  createdAt       DateTime         @default(now()) @map("created_at") @db.DateTime(0)
  updatedBy       String?          @map("updated_by") @db.VarChar(50)
  updatedAt       DateTime         @updatedAt @map("updated_at") @db.DateTime(0)
  scmWarehouse    ScmWarehouse?    @relation(fields: [warehouseId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_issuance_ibfk_1")
  hospitalOffice  HospitalOffice?  @relation(fields: [officeId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_issuance_ibfk_2")
  scmRis          ScmRis?          @relation(fields: [risId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_issuance_ibfk_3")
  scmIssuanceDtls ScmIssuanceDtl[]

  @@index([officeId], map: "office_id")
  @@index([risId], map: "ris_id")
  @@index([warehouseId], map: "warehouse_id")
  @@map("scm_issuance")
}

model ScmIssuanceDtl {
  id           String       @id @default(uuid())
  issuanceId   String?      @map("issuance_id") @db.VarChar(36)
  itemdtlId    String?      @map("itemdtl_id") @db.VarChar(36)
  qtyRequested Int?         @map("qty_requested")
  cost         Float?
  costAmount   Float?       @map("cost_amount")
  qtyGranted   Int?         @map("qty_granted")
  scmIssuance  ScmIssuance? @relation(fields: [issuanceId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_issuance_dtl_ibfk_1")
  scmItemDtl   ScmItemDtl?  @relation(fields: [itemdtlId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_issuance_dtl_ibfk_2")

  @@index([issuanceId], map: "issuance_id")
  @@index([itemdtlId], map: "itemdtl_id")
  @@map("scm_issuance_dtl")
}

model ScmItem {
  id                  String               @id @default(uuid())
  itemCode            String?              @unique() @map("item_code") @db.VarChar(36)
  barcode             String?              @db.VarChar(50)
  itemName            String?              @unique() @map("item_name") @db.VarChar(255)
  itemDescription     String?              @map("item_description") @db.VarChar(50)
  itemcategoryId      String?              @map("itemcategory_id") @db.VarChar(36)
  unitId              String?              @map("unit_id") @db.VarChar(36)
  state               String?              @db.VarChar(20)
  remarks             String?              @db.VarChar(255)
  createdBy           String?              @map("created_by") @db.VarChar(50)
  createdAt           DateTime             @default(now()) @map("created_at") @db.DateTime(0)
  updatedBy           String?              @map("updated_by") @db.VarChar(50)
  updatedAt           DateTime             @updatedAt @map("updated_at") @db.DateTime(0)
  scmItemCategory     ScmItemCategory?     @relation(fields: [itemcategoryId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_item_ibfk_1")
  scmUnit             ScmUnit?             @relation(fields: [unitId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_item_ibfk_2")
  scmItemDtl          ScmItemDtl[]
  scmItemLocationDtls ScmItemLocationDtl[]

  @@index([itemcategoryId], map: "itemcategory_id")
  @@index([unitId], map: "unit_id")
  @@map("scm_item")
}

model ScmItemCategory {
  id        String    @id @default(uuid())
  parentId  String?   @map("parent_id") @db.VarChar(50)
  catName   String?   @map("cat_name") @db.VarChar(150)
  catAcro   String?   @map("cat_acro") @db.VarChar(50)
  sortOrder Int?      @map("sort_order")
  state     String?   @db.VarChar(20)
  createdBy String?   @map("created_by") @db.VarChar(50)
  createdAt DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  updatedBy String?   @map("updated_by") @db.VarChar(50)
  updatedAt DateTime  @updatedAt @map("updated_at") @db.DateTime(0)
  scmItems  ScmItem[]

  @@map("scm_item_category")
}

model ScmItemDtl {
  id                    String                 @id @default(uuid())
  fyCode                Int?                   @map("fy_code")
  entryDate             DateTime               @map("entry_date") @db.Date
  itemId                String                 @map("item_id") @db.VarChar(36)
  parentId              String?                @map("parent_id") @db.VarChar(36)
  subitemCode           String?                @map("subitem_code") @db.VarChar(50)
  subitemName           String                 @map("subitem_name") @db.VarChar(255)
  barcode               String?                @unique() @db.VarChar(36)
  unitId                String?                @map("unit_id") @db.VarChar(36)
  brandName             String?                @map("brand_name") @db.VarChar(150)
  lotNo                 String?                @map("lot_no") @db.VarChar(150)
  batchNo               String?                @map("batch_no") @db.VarChar(150)
  expirationDate        DateTime?              @map("expiration_date") @db.Date
  cost                  Float?
  price                 Float?
  markup                Float?
  balanceQty            Int?                   @map("balance_qty")
  rrMode                ScmReceiveMode?        @relation(fields: [rrModeId], references: [id], onUpdate: Restrict, map: "scm_receive_mode_ibfk_1")
  rrModeId              String?
  state                 String?                @db.VarChar(20)
  remarks               String?                @db.VarChar(255)
  createdBy             String?                @map("created_by") @db.VarChar(50)
  createdAt             DateTime               @default(now()) @map("created_at") @db.DateTime(0)
  updatedBy             String?                @map("updated_by") @db.VarChar(50)
  updatedAt             DateTime               @updatedAt @map("updated_at") @db.DateTime(0)
  scmAdjustmentDtls     ScmAdjustmentDtl[]
  scmBadOrderDtls       ScmBadOrderDtl[]
  scmChargeslipDtls     ScmChargeslipDtl[]
  scmIssuanceDtls       ScmIssuanceDtl[]
  scmItem               ScmItem                @relation(fields: [itemId], references: [id], onUpdate: Restrict, map: "scm_item_dtl_ibfk_1")
  scmUnit               ScmUnit?               @relation(fields: [unitId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_item_dtl_ibfk_2")
  scmItemRateHistories  ScmItemRateHistory[]
  scmReceiveDtls        ScmReceiveDtl[]
  scmReleaseDtls        ScmReleaseDtl[]
  scmRequestDtls        ScmRequestDtl[]
  scmReturnDtls         ScmReturnDtl[]
  scmRisDtls            ScmRisDtl[]
  scmStockInventoryDtls ScmStockInventoryDtl[]
  scmStockLedgers       ScmStockLedger[]

  @@index([itemId], map: "item_id")
  @@index([unitId], map: "unit_id")
  @@map("scm_item_dtl")
}

model ScmItemLocation {
  id                  String               @id @default(uuid())
  warehouseId         String?              @map("warehouse_id") @db.VarChar(36)
  locName             String?              @map("loc_name") @db.VarChar(150)
  state               String?              @db.VarChar(20)
  createdBy           String?              @map("created_by") @db.VarChar(50)
  createdAt           DateTime             @default(now()) @map("created_at") @db.DateTime(0)
  updatedBy           String?              @map("updated_by") @db.VarChar(50)
  updatedAt           DateTime             @updatedAt @map("updated_at") @db.DateTime(0)
  scmWarehouse        ScmWarehouse?        @relation(fields: [warehouseId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_item_location_ibfk_1")
  scmItemLocationDtls ScmItemLocationDtl[]

  @@index([warehouseId], map: "warehouse_id")
  @@map("scm_item_location")
}

model ScmItemLocationDtl {
  id                    String                 @id @default(uuid())
  itemId                String                 @map("item_id") @db.VarChar(36)
  locationId            String                 @map("location_id") @db.VarChar(36)
  scmItem               ScmItem                @relation(fields: [itemId], references: [id], onUpdate: Restrict, map: "scm_item_location_dtl_ibfk_1")
  scmItemLocation       ScmItemLocation        @relation(fields: [locationId], references: [id], onUpdate: Restrict, map: "scm_item_location_dtl_ibfk_2")
  scmStockInventoryDtls ScmStockInventoryDtl[]
  scmStockLedgers       ScmStockLedger[]

  @@index([itemId], map: "item_id")
  @@index([locationId], map: "location_id")
  @@map("scm_item_location_dtl")
}

model ScmItemRateHistory {
  id         String      @id @default(uuid())
  itemdtlId  String?     @map("itemdtl_id") @db.VarChar(36)
  lastCost   Float?      @map("last_cost")
  lastPrice  Float?      @map("last_price")
  lastMarkup Float?      @map("last_markup")
  cost       Float?
  price      Float?
  markup     Float?
  state      String?     @db.VarChar(20)
  remarks    String?     @db.VarChar(255)
  createdBy  String?     @map("created_by") @db.VarChar(50)
  createdAt  DateTime    @default(now()) @map("created_at") @db.DateTime(0)
  updatedBy  String?     @map("updated_by") @db.VarChar(50)
  updatedAt  DateTime    @updatedAt @map("updated_at") @db.DateTime(0)
  scmItemDtl ScmItemDtl? @relation(fields: [itemdtlId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_item_rate_history_ibfk_1")

  @@index([itemdtlId], map: "itemdtl_id")
  @@map("scm_item_rate_history")
}

model ScmLedgerCode {
  id              String           @id @default(uuid())
  ledgerCode      String           @map("ledger_code") @db.VarChar(36)
  ledgerName      String           @map("ledger_name") @db.VarChar(150)
  ledgerDesc      String?          @map("ledger_desc") @db.VarChar(50)
  ledgerFlag      String?          @map("ledger_flag") @db.VarChar(50)
  state           String?          @db.VarChar(20)
  remarks         String?          @db.VarChar(255)
  createdBy       String?          @map("created_by") @db.VarChar(50)
  createdAt       DateTime         @default(now()) @map("created_at") @db.DateTime(0)
  updatedBy       String?          @map("updated_by") @db.VarChar(50)
  updatedAt       DateTime         @updatedAt @map("updated_at") @db.DateTime(0)
  scmStockLedgers ScmStockLedger[]

  @@map("scm_ledger_code")
}

model ScmReceive {
  id                String          @id @default(uuid())
  fyCode            Int?            @map("fy_code")
  rcvDate           DateTime        @map("rcv_date") @db.Date
  rcvRefno          String?         @map("rcv_refno") @db.VarChar(30)
  warehouseId       String          @map("warehouse_id") @db.VarChar(36)
  supplierId        String          @map("supplier_id") @db.VarChar(36)
  receivemodeId     String          @map("receivemode_id") @db.VarChar(36)
  purchaserequestNo String?         @map("purchaserequest_no") @db.VarChar(30)
  deliveryreceiptNo String?         @map("deliveryreceipt_no") @db.VarChar(30)
  purchaseorderNo   String?         @map("purchaseorder_no") @db.VarChar(30)
  state             String?         @db.VarChar(20)
  remarks           String?         @db.VarChar(255)
  isPosted          Boolean?        @map("is_posted")
  postedBy          String?         @map("posted_by") @db.VarChar(50)
  postedAt          DateTime?       @default(now()) @map("posted_at") @db.DateTime(0)
  createdBy         String?         @map("created_by") @db.VarChar(50)
  createdAt         DateTime        @default(now()) @map("created_at") @db.DateTime(0)
  updatedBy         String?         @map("updated_by") @db.VarChar(50)
  updatedAt         DateTime        @updatedAt @map("updated_at") @db.DateTime(0)
  scmWarehouse      ScmWarehouse    @relation(fields: [warehouseId], references: [id], onUpdate: Restrict, map: "scm_receive_ibfk_1")
  scmSupplier       ScmSupplier     @relation(fields: [supplierId], references: [id], onUpdate: Restrict, map: "scm_receive_ibfk_2")
  scmReceiveMode    ScmReceiveMode  @relation(fields: [receivemodeId], references: [id], onUpdate: Restrict, map: "scm_receive_ibfk_3")
  scmReceiveDtls    ScmReceiveDtl[]

  @@index([receivemodeId], map: "receivemode_id")
  @@index([supplierId], map: "supplier_id")
  @@index([warehouseId], map: "warehouse_id")
  @@map("scm_receive")
}

model ScmReceiveDtl {
  id             String      @id @default(uuid())
  receiveId      String?     @map("receive_id") @db.VarChar(36)
  itemdtlId      String?     @map("itemdtl_id") @db.VarChar(36)
  qty            Int?
  cost           Float?
  costAmount     Float?      @map("cost_amount")
  lotNo          String?     @map("lot_no") @db.VarChar(50)
  batchNo        String?     @map("batch_no") @db.VarChar(50)
  expirationDate DateTime?   @map("expiration_date") @db.Date
  barcodeNo      String?     @unique() @map("barcode_no") @db.VarChar(50)
  scmReceive     ScmReceive? @relation(fields: [receiveId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_receive_dtl_ibfk_1")
  scmItemDtl     ScmItemDtl? @relation(fields: [itemdtlId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_receive_dtl_ibfk_2")

  @@index([itemdtlId], map: "itemdtl_id")
  @@index([receiveId], map: "receive_id")
  @@map("scm_receive_dtl")
}

model ScmReceiveMode {
  id           String        @id @default(uuid())
  recvMode     String        @map("recv_mode") @db.VarChar(150)
  state        String?       @db.VarChar(20)
  createdBy    String?       @map("created_by") @db.VarChar(50)
  createdAt    DateTime      @default(now()) @map("created_at") @db.DateTime(0)
  updatedBy    String?       @map("updated_by") @db.VarChar(50)
  updatedAt    DateTime      @updatedAt @map("updated_at") @db.DateTime(0)
  scmReceives  ScmReceive[]
  scmSuppliers ScmSupplier[]
  scmItemDtl   ScmItemDtl[]

  @@map("scm_receive_mode")
}

model ScmRelease {
  id                                                String          @id @default(uuid())
  fyCode                                            Int?            @map("fy_code")
  relDate                                           DateTime?       @map("rel_date") @db.Date
  relRefno                                          String?         @map("rel_refno") @db.VarChar(30)
  requestId                                         String?         @map("request_id") @db.VarChar(36)
  warehouseId                                       String?         @map("warehouse_id") @db.VarChar(36)
  requestfromId                                     String?         @map("requestfrom_id") @db.VarChar(36)
  state                                             String?         @db.VarChar(20)
  remarks                                           String?         @db.VarChar(255)
  isPosted                                          Boolean?        @map("is_posted")
  postedBy                                          String?         @map("posted_by") @db.VarChar(50)
  postedAt                                          DateTime?       @default(now()) @map("posted_at") @db.DateTime(0)
  isApproved                                        Boolean?        @map("is_approved")
  approvedBy                                        String?         @map("approved_by") @db.VarChar(50)
  approvedAt                                        DateTime?       @map("approved_at") @db.DateTime(0)
  isRejected                                        Boolean?        @map("is_rejected")
  rejectedBy                                        String?         @map("rejected_by") @db.VarChar(50)
  rejectedAt                                        DateTime?       @map("rejected_at") @db.DateTime(0)
  isReleased                                        Boolean?        @map("is_released")
  releasedBy                                        String?         @map("released_by") @db.VarChar(50)
  releasedAt                                        DateTime?       @map("released_at") @db.DateTime(0)
  scmRequest                                        ScmRequest?     @relation(fields: [requestId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_release_ibfk_1")
  scmWarehouseScmReleaseWarehouseIdToscmWarehouse   ScmWarehouse?   @relation("scm_release_warehouse_idToscm_warehouse", fields: [warehouseId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_release_ibfk_2")
  scmWarehouseScmReleaseRequestfromIdToscmWarehouse ScmWarehouse?   @relation("scm_release_requestfrom_idToscm_warehouse", fields: [requestfromId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_release_ibfk_3")
  scmReleaseDtls                                    ScmReleaseDtl[]

  @@index([requestId], map: "request_id")
  @@index([requestfromId], map: "requestfrom_id")
  @@index([warehouseId], map: "warehouse_id")
  @@map("scm_release")
}

model ScmReleaseDtl {
  id           String      @id @default(uuid())
  releaseId    String?     @map("release_id") @db.VarChar(36)
  itemdtlId    String?     @map("itemdtl_id") @db.VarChar(36)
  qtyRequested Int?        @map("qty_requested")
  qtyApproved  Int?        @map("qty_approved")
  qtyReleased  Int?        @map("qty_released")
  qtyReceived  Int?        @map("qty_received")
  cost         Float?
  costAmount   Float?      @map("cost_amount")
  scmItemDtl   ScmItemDtl? @relation(fields: [itemdtlId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_release_dtl_ibfk_2")
  scmRelease   ScmRelease? @relation(fields: [releaseId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_release_dtl_ibfk_3")

  @@index([itemdtlId], map: "itemdtl_id")
  @@index([releaseId], map: "release_id")
  @@map("scm_release_dtl")
}

model ScmRequest {
  id                                              String          @id @default(uuid())
  fyCode                                          Int             @map("fy_code")
  reqRefno                                        String          @map("req_refno") @db.VarChar(30)
  reqDate                                         DateTime        @map("req_date") @db.Date
  warehouseId                                     String          @map("warehouse_id") @db.VarChar(36)
  requesttoId                                     String          @map("requestto_id") @db.VarChar(36)
  state                                           String?         @db.VarChar(20)
  remarks                                         String?         @db.VarChar(255)
  isPosted                                        Float?          @map("is_posted")
  postedBy                                        String?         @map("posted_by") @db.VarChar(50)
  postedAt                                        DateTime?       @default(now()) @map("posted_at") @db.DateTime(0)
  isReceived                                      Boolean?        @map("is_received")
  receivedBy                                      String?         @map("received_by") @db.VarChar(50)
  receivedAt                                      DateTime?       @map("received_at") @db.DateTime(0)
  createdBy                                       String?         @map("created_by") @db.VarChar(50)
  createdAt                                       DateTime        @default(now()) @map("created_at") @db.DateTime(0)
  updatedBy                                       String?         @map("updated_by") @db.VarChar(50)
  updatedAt                                       DateTime        @updatedAt @map("updated_at") @db.DateTime(0)
  scmReleases                                     ScmRelease[]
  scmWarehouseScmRequestWarehouseIdToscmWarehouse ScmWarehouse    @relation("scm_request_warehouse_idToscm_warehouse", fields: [warehouseId], references: [id], onUpdate: Restrict, map: "scm_request_ibfk_1")
  scmWarehouseScmRequestRequesttoIdToscmWarehouse ScmWarehouse    @relation("scm_request_requestto_idToscm_warehouse", fields: [requesttoId], references: [id], onUpdate: Restrict, map: "scm_request_ibfk_2")
  scmRequestDtls                                  ScmRequestDtl[]

  @@index([requesttoId], map: "requestto_id")
  @@index([warehouseId], map: "warehouse_id")
  @@map("scm_request")
}

model ScmRequestDtl {
  id          String      @id @default(uuid())
  requestId   String?     @map("request_id") @db.VarChar(36)
  itemdtlId   String?     @map("itemdtl_id") @db.VarChar(36)
  qtyRequest  Int?        @map("qty_request")
  cost        Float?
  costAmount  Float?      @map("cost_amount")
  qtyReceived Float?      @map("qty_received")
  qtyBalance  Int?        @map("qty_balance")
  scmRequest  ScmRequest? @relation(fields: [requestId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_request_dtl_ibfk_1")
  scmItemDtl  ScmItemDtl? @relation(fields: [itemdtlId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_request_dtl_ibfk_2")

  @@index([itemdtlId], map: "itemdtl_id")
  @@index([requestId], map: "request_id")
  @@map("scm_request_dtl")
}

model ScmReturn {
  id            String         @id @default(uuid())
  fyCode        Int            @map("fy_code")
  sretDate      DateTime       @map("sret_date") @db.Date
  sretRefno     String         @map("sret_refno") @db.VarChar(25)
  warehouseId   String         @map("warehouse_id") @db.VarChar(36)
  chargeslipId  String         @map("chargeslip_id") @db.VarChar(36)
  patientName   String         @map("patient_name") @db.VarChar(155)
  state         String         @db.VarChar(20)
  remarks       String?        @db.VarChar(255)
  isPosted      Boolean?       @map("is_posted")
  postedBy      String?        @map("posted_by") @db.VarChar(50)
  postedAt      DateTime?      @default(now()) @map("posted_at") @db.DateTime(0)
  createdBy     String?        @map("created_by") @db.VarChar(50)
  createdAt     DateTime       @default(now()) @map("created_at") @db.DateTime(0)
  updatedBy     String?        @map("updated_by") @db.VarChar(50)
  updatedAt     DateTime       @updatedAt @map("updated_at") @db.DateTime(0)
  scmWarehouse  ScmWarehouse   @relation(fields: [warehouseId], references: [id], onUpdate: Restrict, map: "scm_return_ibfk_1")
  scmChargeslip ScmChargeslip  @relation(fields: [chargeslipId], references: [id], onUpdate: Restrict, map: "scm_return_ibfk_3")
  scmReturnDtls ScmReturnDtl[]

  @@index([chargeslipId], map: "chargeslip_id")
  @@index([warehouseId], map: "warehouse_id")
  @@map("scm_return")
}

model ScmReturnDtl {
  id          String      @id @default(uuid())
  returnId    String?     @map("return_id") @db.VarChar(36)
  itemdtlId   String?     @map("itemdtl_id") @db.VarChar(36)
  qty         Int?
  cost        Float?
  price       Float?
  costAmount  Float?      @map("cost_amount")
  priceAmount Float?      @map("price_amount")
  scmReturn   ScmReturn?  @relation(fields: [returnId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_return_dtl_ibfk_1")
  scmItemDtl  ScmItemDtl? @relation(fields: [itemdtlId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_return_dtl_ibfk_2")

  @@index([itemdtlId], map: "itemdtl_id")
  @@index([returnId], map: "return_id")
  @@map("scm_return_dtl")
}

model ScmRis {
  id             String          @id @default(uuid())
  fyCode         Int?            @map("fy_code")
  risRefno       String?         @map("ris_refno") @db.VarChar(30)
  risDate        DateTime?       @map("ris_date") @db.Date
  officeId       String?         @map("office_id") @db.VarChar(36)
  isReceived     Boolean?        @map("is_received")
  receivedBy     String?         @map("received_by") @db.VarChar(50)
  receivedAt     DateTime?       @map("received_at") @db.DateTime(0)
  createdBy      String?         @map("created_by") @db.VarChar(50)
  createdAt      DateTime        @default(now()) @map("created_at") @db.DateTime(0)
  updatedBy      String?         @map("updated_by") @db.VarChar(50)
  updatedAt      DateTime        @updatedAt @map("updated_at") @db.DateTime(0)
  scmIssuances   ScmIssuance[]
  hospitalOffice HospitalOffice? @relation(fields: [officeId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_ris_ibfk_1")
  scmRisDtls     ScmRisDtl[]

  @@index([officeId], map: "office_id")
  @@map("scm_ris")
}

model ScmRisDtl {
  id          String      @id @default(uuid())
  risId       String?     @map("ris_id") @db.VarChar(36)
  itemdtlId   String?     @map("itemdtl_id") @db.VarChar(36)
  qtyRequest  Int?        @map("qty_request")
  qtyReceived Int?        @map("qty_received")
  scmRis      ScmRis?     @relation(fields: [risId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_ris_dtl_ibfk_1")
  scmItemDtl  ScmItemDtl? @relation(fields: [itemdtlId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_ris_dtl_ibfk_2")

  @@index([itemdtlId], map: "itemdtl_id")
  @@index([risId], map: "ris_id")
  @@map("scm_ris_dtl")
}

model ScmStockInventory {
  id                    String                 @id @default(uuid())
  fyCode                Int?                   @map("fy_code")
  invDate               DateTime?              @map("inv_date") @db.DateTime(0)
  invRefno              String?                @map("inv_refno") @db.VarChar(30)
  warehouseId           String?                @map("warehouse_id") @db.VarChar(36)
  description           String?                @db.VarChar(255)
  state                 String?                @db.VarChar(20)
  remarks               String?                @db.VarChar(255)
  isPosted              Boolean?               @map("is_posted")
  postedAt              DateTime?              @default(now()) @map("posted_at") @db.DateTime(0)
  postedBy              String?                @map("posted_by") @db.VarChar(50)
  createdBy             String?                @map("created_by") @db.VarChar(50)
  createdAt             DateTime               @default(now()) @map("created_at") @db.DateTime(0)
  updatedBy             String?                @map("updated_by") @db.VarChar(50)
  updatedAt             DateTime               @updatedAt @map("updated_at") @db.DateTime(0)
  scmWarehouse          ScmWarehouse?          @relation(fields: [warehouseId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_stock_inventory_ibfk_1")
  scmStockInventoryDtls ScmStockInventoryDtl[]

  @@index([warehouseId], map: "warehouse_id")
  @@map("scm_stock_inventory")
}

model ScmStockInventoryDtl {
  id                 String              @id @default(uuid())
  stockinventroyId   String?             @map("stockinventroy_id") @db.VarChar(36)
  itemlocationdtlId  String?             @map("itemlocationdtl_id") @db.VarChar(36)
  itemdtlId          String?             @map("itemdtl_id") @db.VarChar(36)
  qtyEndingbalance   Int?                @map("qty_endingbalance")
  qtyPhysicalcount   Int?                @map("qty_physicalcount")
  qtyVariance        Int?                @map("qty_variance")
  scmStockInventory  ScmStockInventory?  @relation(fields: [stockinventroyId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_stock_inventory_dtl_ibfk_1")
  scmItemLocationDtl ScmItemLocationDtl? @relation(fields: [itemlocationdtlId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_stock_inventory_dtl_ibfk_2")
  scmItemDtl         ScmItemDtl?         @relation(fields: [itemdtlId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_stock_inventory_dtl_ibfk_3")

  @@index([itemdtlId], map: "itemdtl_id")
  @@index([itemlocationdtlId], map: "itemlocationdtl_id")
  @@index([stockinventroyId], map: "stockinventroy_id")
  @@map("scm_stock_inventory_dtl")
}

model ScmStockLedger {
  id                 String              @id @default(uuid())
  fyCode             Int?                @map("fy_code")
  entryDate          DateTime?           @map("entry_date") @db.Date
  warehouseId        String?             @map("warehouse_id") @db.VarChar(36)
  itemlocationdtlId  String?             @map("itemlocationdtl_id") @db.VarChar(36)
  itemdtlId          String?             @map("itemdtl_id") @db.VarChar(36)
  ledgercodeId       String?             @map("ledgercode_id") @db.VarChar(36)
  refno              String?             @db.VarChar(30)
  refdate            DateTime?           @db.Date
  qty                Int?
  cost               Float?
  price              Float?
  postedBy           String?             @map("posted_by") @db.VarChar(50)
  postedAt           DateTime?           @default(now()) @map("posted_at") @db.DateTime(0)
  scmWarehouse       ScmWarehouse?       @relation(fields: [warehouseId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_stock_ledger_ibfk_1")
  scmItemLocationDtl ScmItemLocationDtl? @relation(fields: [itemlocationdtlId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_stock_ledger_ibfk_2")
  scmItemDtl         ScmItemDtl?         @relation(fields: [itemdtlId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_stock_ledger_ibfk_3")
  scmLedgerCode      ScmLedgerCode?      @relation(fields: [ledgercodeId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_stock_ledger_ibfk_4")

  @@index([itemdtlId], map: "itemdtl_id")
  @@index([itemlocationdtlId], map: "itemlocationdtl_id")
  @@index([ledgercodeId], map: "ledgercode_id")
  @@index([warehouseId], map: "warehouse_id")
  @@map("scm_stock_ledger")
}

model ScmSupplier {
  id              String          @id @default(uuid())
  supplierName    String          @unique() @map("supplier_name") @db.VarChar(150)
  supplierAddress String?         @map("supplier_address") @db.VarChar(255)
  receivemodeId   String?         @map("receivemode_id") @db.VarChar(36)
  contactPerson   String?         @map("contact_person") @db.VarChar(150)
  contactNo       String?         @map("contact_no") @db.VarChar(11)
  state           String?         @db.VarChar(20)
  remarks         String?         @db.VarChar(255)
  createdBy       String?         @map("created_by") @db.VarChar(50)
  createdAt       DateTime        @default(now()) @map("created_at") @db.DateTime(0)
  updatedBy       String?         @map("updated_by") @db.VarChar(50)
  updatedAt       DateTime        @updatedAt @map("updated_at") @db.DateTime(0)
  scmBadOrders    ScmBadOrder[]
  scmReceives     ScmReceive[]
  scmReceiveMode  ScmReceiveMode? @relation(fields: [receivemodeId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_supplier_ibfk_1")

  @@index([receivemodeId], map: "receivemode_id")
  @@map("scm_supplier")
}

model ScmTransfer {
  id              String           @id @default(uuid())
  fyCode          Int?             @map("fy_code")
  tfDate          DateTime?        @map("tf_date") @db.Date
  tfRefno         String?          @map("tf_refno") @db.VarChar(30)
  warehouseId     String?          @map("warehouse_id") @db.VarChar(36)
  state           String?          @db.VarChar(20)
  remarks         String?          @db.VarChar(255)
  isPosted        Boolean?         @map("is_posted")
  postedAt        DateTime?        @default(now()) @map("posted_at") @db.DateTime(0)
  postedBy        String?          @map("posted_by") @db.VarChar(50)
  createdBy       String?          @map("created_by") @db.VarChar(50)
  createdAt       DateTime         @default(now()) @map("created_at") @db.DateTime(0)
  updatedBy       String?          @map("updated_by") @db.VarChar(50)
  updatedAt       DateTime         @updatedAt @map("updated_at") @db.DateTime(0)
  scmTransferDtls ScmTransferDtl[]

  @@map("scm_transfer")
}

model ScmTransferDtl {
  id               String       @id @default(uuid())
  transferId       String?      @map("transfer_id") @db.VarChar(36)
  itemlocationFrom String?      @map("itemlocation_from") @db.VarChar(36)
  qtyTransfered    Int?         @map("qty_transfered")
  itemlocationTo   String?      @map("itemlocation_to") @db.VarChar(36)
  qtyReceived      Int?         @map("qty_received")
  remarks          String?      @db.VarChar(255)
  scmTransfer      ScmTransfer? @relation(fields: [transferId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "scm_transfer_dtl_ibfk_1")

  @@index([transferId], map: "transfer_id")
  @@map("scm_transfer_dtl")
}

model ScmUnit {
  id          String       @id @default(uuid())
  unitName    String?      @map("unit_name") @db.VarChar(150)
  unitAcro    String?      @map("unit_acro") @db.VarChar(50)
  state       String?      @db.VarChar(20)
  createdBy   String?      @map("created_by") @db.VarChar(50)
  createdAt   DateTime     @default(now()) @map("created_at") @db.DateTime(0)
  updatedBy   String?      @map("updated_by") @db.VarChar(50)
  updatedAt   DateTime     @updatedAt @map("updated_at") @db.DateTime(0)
  scmItems    ScmItem[]
  scmItemDtls ScmItemDtl[]

  @@map("scm_unit")
}

model ScmWarehouse {
  id                                               String              @id @default(uuid())
  whName                                           String              @map("wh_name") @db.VarChar(150)
  whAcro                                           String              @unique() @map("wh_acro") @db.VarChar(50)
  state                                            String?             @default("active") @db.VarChar(20)
  createdBy                                        String?             @map("created_by") @db.VarChar(50)
  createdAt                                        DateTime            @default(now()) @map("created_at") @db.DateTime(0)
  updatedBy                                        String?             @map("updated_by") @db.VarChar(50)
  updatedAt                                        DateTime            @updatedAt @map("updated_at") @db.DateTime(0)
  scmAdjustments                                   ScmAdjustment[]
  scmBadOrders                                     ScmBadOrder[]
  scmChargeslips                                   ScmChargeslip[]
  scmIssuances                                     ScmIssuance[]
  scmItemLocations                                 ScmItemLocation[]
  scmReceives                                      ScmReceive[]
  scmReleaseScmReleaseWarehouseIdToscmWarehouses   ScmRelease[]        @relation("scm_release_warehouse_idToscm_warehouse")
  scmReleaseScmReleaseRequestfromIdToscmWarehouses ScmRelease[]        @relation("scm_release_requestfrom_idToscm_warehouse")
  scmRequestScmRequestWarehouseIdToscmWarehouses   ScmRequest[]        @relation("scm_request_warehouse_idToscm_warehouse")
  scmRequestScmRequestRequesttoIdToscmWarehouses   ScmRequest[]        @relation("scm_request_requestto_idToscm_warehouse")
  scmReturns                                       ScmReturn[]
  scmStockInventories                              ScmStockInventory[]
  scmStockLedgers                                  ScmStockLedger[]

  @@map("scm_warehouse")
}

model RefreshToken {
  id            String   @id @default(uuid())
  refresh_token String   @db.VarChar(255)
  validity      DateTime
  username      String
  userId        String   @unique
  system_user   User     @relation(fields: [userId], references: [id])

  @@map("system_refresh_token")
}

model Role {
  id          String       @id @default(uuid())
  user        User[]       @relation("system_user_role")
  permission  Permission[]
  name        String       @unique
  description String?
  status      String       @default("active")
  createdBy   String?      @map("created_by") @db.VarChar(50)
  createdAt   DateTime     @default(now()) @map("created_at") @db.DateTime(0)
  updatedBy   String?      @map("updated_by") @db.VarChar(50)
  updatedAt   DateTime     @updatedAt @map("updated_at") @db.DateTime(0)

  @@map("system_role")
}

model Permission {
  id        String   @id @default(uuid())
  url       String
  urlCode   String?
  Role      Role?    @relation(fields: [roleId], references: [id])
  roleId    String?
  createdBy String?  @map("created_by") @db.VarChar(50)
  createdAt DateTime @default(now()) @map("created_at") @db.DateTime(0)
  updatedBy String?  @map("updated_by") @db.VarChar(50)
  updatedAt DateTime @updatedAt @map("updated_at") @db.DateTime(0)

  @@map("system_permission")
}

enum Gender {
  MALE
  FEMALE
}
